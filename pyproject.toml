[project]
name = "package_name"
version = "0.0.1"
description = "package description"
readme = "README.md"
requires-python = ">=3.11,<3.12"
license = { text = "Proprietary" }
authors = [{ name = "Jan Vyborny", email = "jan.vyborny2@gmail.com" }]

dependencies = []


[tool.uv]
dev-dependencies = [
    "mypy>=1.15.0",
    "ruff>=0.11.3",
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "pytest-mypy>=1.0.1",
    "pytest-ruff>=0.4.1",
]


[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]
minversion = "6.0"
addopts = [
    "-rfEP",  # show failures, errors, and passed with output
    "-vv",    # verbose output
    "--ruff", # run ruff on all tests
    "--mypy", # run mypy on all tests
    # "--no-header",                                    # do not show header
    # "-s",                                             # do not capture output

    # "--pdb",                                          # enter python debugger on failure
    # "--pdbcls=IPython.terminal.debugger:TerminalPdb", # use IPython debugger
    # "--log-level=DEBUG",                              # set log level to DEBUG

    # "-k", "pattern",                                  # run only tests matching this pattern
    # "tests/test_mod.py::TestClass::test_method",      # run only this test
    # "-m", "mark",                                     # run only tests with this mark
]

[tool.ruff]
line-length = 88
indent-width = 4
target-version = "py311"
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

[tool.ruff.lint]
select = [
    "E", # pycodestyle
    "W", # pycodestyle warnings
    "F", # pyflakes
    "D", # pydocstyle
    "B", # bugbear
    "S", # bandit
]
ignore = []
fixable = ["ALL"]
unfixable = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]

[tool.mypy]
python_version = "3.11"
files = "src"
strict = true
ignore_missing_imports = true
check_untyped_defs = true
disallow_subclassing_any = true
warn_unreachable = true
warn_unused_configs = true
show_error_context = true
show_column_numbers = true

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"
